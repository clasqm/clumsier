MUTEXUNLOCK
================

Releases a mutex lock

Syntax:
declare sub Mutexunlock ( byval id as any ptr )

Usage:
Mutexunlock( id )

Parameters:

`id`
The `any ptr` handle of the mutex to be unlocked.

Description:

`Mutexunlock` releases a mutex "handle" created by `Mutexcreate`, and locked
with `Mutexlock`. This allows other threads sharing the mutex to continue
execution.

See `Mutexcreate` for more general information on mutexes.

Examples:

See the examples in `Mutexcreate` and also `Threadcreate`.

Dialect Differences:
Threading is not allowed in the -lang qb dialect.

Platform Differences:

  * The DOS version of FreeBASIC does not allow for threads, as the OS
  does not support them.
  * In Linux the threads are always started in the order they are created,
  this can't be assumed in Win32. It's an OS, not a FreeBASIC issue.

Differences from QB:
New to FreeBASIC

