Operator \ (Integer divide)
================

Divides two `Integer` expressions

Syntax:
declare operator \ ( byref lhs as integer, byref rhs as integer ) as integer
declare operator \ ( byref lhs as uinteger, byref rhs as uinteger ) as
uinteger

Usage:
result = lhs `\` rhs

Parameters:

`lhs`
The left-hand side dividend expression.

`rhs`
The right-hand side divisor expression.

Return Value:
Returns the quotient of an `Integer` dividend and divisor.

Description:

`Operator \` (Integer division) divides two `Integer` expressions and returns
the result. Float numeric values are converted to `Integer` by rounding up or
down, and the fractional part of the resulting quotient is truncated.

If the divisor (`rhs`) is zero (`0`), a division by zero error (crash) will be
raised.

Neither of the operands are modified in any way.

This operator can be overloaded for user-defined types.

Examples:

Dim n As Double
Print n \ 5
n = 7 \ 2.6  '' => 7 \ 3  => 2.33333  => 2
Print n
n = 7 \ 2.4  '' => 7 \ 2 => 3.5 => 3
Print n
Sleep

Output:

 
 
    0
    2
    3


Dialect Differences:
In the -lang qb dialect, this operator cannot be overloaded.

Differences from QB:
  * None

