TRIM
================

Removes surrounding substrings or characters on the left and right side of a
string

Syntax:
declare function Trim ( byref str as const string, [ Any ] byref trimset as
const string = " " ) as string
declare function Trim ( byref str as const wstring, [ Any ] byref trimset as
const wstring = Wstr(" ") ) as wstring

Usage:
result = Trim[$]( str [, [ Any ] trimset ] )

Parameters:

`str`
The source string.

`trimset`
The substring to trim.

Return Value:
Returns the trimmed string.

Description:

This procedure trims surrounding characters from the left (beginning) and
right (end) of a source string. Substrings matching `trimset` will be trimmed
if specified, otherwise spaces (ASCII code 32) are trimmed.

If the `Any` keyword is used, any character matching a character in `trimset`
will be trimmed.

All comparisons are case-sensitive.

Examples:

Dim s1 As String = " ... Stuck in the middle ... "
Print "'" \+ Trim(s1) \+ "'"
Print "'" \+ Trim(s1, Any " .") \+ "'"

Dim s2 As String = "BaaBaaaaB With You aaBBaaBaa"
Print "'" \+ Trim(s2, "Baa") \+ "'"
Print "'" \+ Trim(s2, Any "Ba") \+ "'"

will produce the output:


 
 
    '... Stuck in the middle ...'
    'Stuck in the middle'
    'aaB With You aaB'
    ' With You '		


Platform Differences:

  * DOS version/target of FreeBASIC does not support the wide-character version of `Trim`.

Dialect Differences:
Not available in the -lang qb dialect unless referenced with the
alias `__Trim`.
  * The string type suffix "$" is optional in the -lang fblite dialect.
  * The string type suffix "$" is ignored in the -lang fb dialect, warn only with the -w suffix compile option (or -w pedantic compile option).

Differences from QB:
New to FreeBASIC

