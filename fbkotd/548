VALUINT
================

Converts a string to an unsigned 32bit integer

Syntax:
declare function Valuint ( byref strnum as const string ) as ulong
declare function Valuint ( byref strnum as const wstring ) as ulong

Usage:
result = Valuint ( strnum )

Parameters:

`strnum`
the string to convert

Return Value:
Returns a `Ulong` value of the converted string

If the first character of the string is invalid, `Valuint` will return `0`.

Description:

For example, `Valuint("10")` will return `10`, and `Valuint("10.60")` will
return `10` as well. The function parses the string from the left, skipping
any white space, and returns the longest number it can read, stopping at the
first non-suitable character it finds. Any non-numeric characters, including
decimal points and exponent specifiers, are considered non-suitable, for
example, `Valuint("23.1E+6")` will just return `23`.

`Valuint` can be used to convert integer numbers in binary / octal /
hexadecimal format, if they have the relevant identifier (`"&B"` / `"&O"` /
`"&H"`) prefixed, for example: `Valuint("&HFF")` returns `255`.

If you want to convert a number into string format, use the `Str` function.

Examples:

Dim a As String, b As UInteger
a = "20xa211"
b = ValUInt(a)
Print a, b

 
    20xa211   20

Dialect Differences:
Not available in the -lang qb dialect unless referenced with the
alias `__Valuint`.

Differences from QB:
New to FreeBASIC
