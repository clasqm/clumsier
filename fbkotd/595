EXP
================

Returns `e` raised to the power of a given number

Syntax:
declare function Exp cdecl ( byval number as double ) as double

Usage:
result = Exp( number )

Parameters:

`number`
The `Double` `number` that `e` is raised to the power of.

Return Value:
Returns the Double value of `e` raised to power of `number`.

Description:

The mathematical constant `e`, also called Euler's constant, is the base of
the `Exp` and `Log` and is an irrational and transcendental number. The value
of `e` to twenty significant figures is: `2.7182818284590452354`. The required
`number` argument can be any valid numeric expression within range of the
function. If `number` is too large, `Exp` returns infinity. If `number` is too
small, `Exp` returns zero (`0.0`). If `number` is zero, `1.0` is returned. The
exact limit on `number` is based on the math processor.

`Exp` can be overloaded as operator to accept user-defined types.

Examples:

'Compute Continuous Compound Interest
Dim r As Double
Dim p As Double
Dim t As Double
Dim a As Double

Input "Please enter the initial investment (principal amount): "; p
Input "Please enter the annual interest rate (as a decimal): "; r
Input "Please enter the number of years to invest: "; t

a = p * Exp ( r * t )
Print ""
Print "After";t;" years, at an interest rate of"; r * 100; "%, your initial
investment of"; p; " would be worth";a


The output would look like:

 
 
    Please enter the initial investment (principal amount): 100
    Please enter the annual interest rate (As a decimal): .08
    Please enter the number of years To invest: 20
    After 20 years, at an interest rate of 8%, your initial investment 
    of 100 would be worth 495.3032424395115


Differences from QB:
  * None

