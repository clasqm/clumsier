ASSERTWARN
================

Debugging macro that prints a warning if an expression evaluates to 0.

Syntax:
#define ASSERTWARN(expression) if (expression) = 0 then : fb_AssertWarn(
__FILE__, __LINE__, __FUNCTION__, #expression ) : end if

Usage:
ASSERTWARN( expression )

Parameters:
`expression`

Any valid expression. If `expression` evaluates to `0`, a warning message is
printed to stderr (console).

Description:

The `ASSERTWARN` macro is intended for use in debugging and works only if the
`-g` option is selected in the FBC command line. In this case it prints a
warning message if `expression` evaluates to `0`. It doesn't stop the program
execution like `ASSERT` does.

Its normal use is to check the correct value of the variables during
debugging.

If `-g` is not passed to fbc, the macro does not generate any code.

Examples:

Sub foo
  Dim a As Integer
  a=0
  AssertWarn(a=1)
End Sub

foo

'' If -g is used this code prints: test.bas(3): assertion failed at FOO: a=1

Dialect Differences:
Not available in the -lang qb dialect unless referenced with the
alias `__ASSERTWARN`.

Differences from QB:
New to FreeBASIC
